@model Restorant.Web.ViewModels.Resumes.ResumeViewModel
@section Styles{
    <link rel="stylesheet" type="text/css" href="~/Content/jquery.datepick.css">
    <link rel="stylesheet" type="text/css" href="~/Content/custom-partial.css" />
}
@using System.Web.UI.WebControls

@{var listItems = new List<ListItem>
    {
          new ListItem { Text = "rate", Value="" },
          new ListItem { Text = "per hour", Value="perHouer" },
          new ListItem {Text="per Day",Value="perDay" },
          new ListItem { Text = "per week", Value="perWeek" },
          new ListItem { Text = "per month", Value="perMonth" },
          new ListItem { Text = "per year", Value="perYear" }
    };
}
<h2>Job application form</h2>
<div class="div-warning">
    <b>Step One:</b> Compleate your personal information
    <br />
    <b>Step Two:</b> Upload your Resume <b>or</b> download Application Form
</div>
<h4>Step 1 of 2</h4>

@using (Html.BeginForm("Create", "Resume", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <fieldset>
        <legend>Personal Data</legend>
        @Html.LabelFor(x => x.FirstName, new { @class = "reserve-label" })
        @Html.TextBoxFor(x => x.FirstName, new { @class = "reserve-input" })
        @Html.LabelFor(x => x.LastName, new { @class = "reserve-label" })
        @Html.TextBoxFor(x => x.LastName, new { @class = "reserve-input" })

        <br />
        @Html.LabelFor(x => x.Address.StreetAdress, new { @class = "reserve-label" })
        @Html.TextBoxFor(x => x.Address.StreetAdress, new { @class = "reserve-input", style = "width:79%", required = "required" })
        <br />
        @Html.LabelFor(x => x.Address.City, new { @class = "reserve-label" })
        @Html.TextBoxFor(x => x.Address.City, new { @class = "reserve-input min", required = "required" })
        @Html.LabelFor(x => x.Address.State, new { @class = "reserve-label" })
        @Html.TextBoxFor(x => x.Address.State, new { @class = "reserve-input min", required = "required" })
        @Html.LabelFor(x => x.Address.ZipCode, new { @class = "reserve-label" })
        @Html.TextBoxFor(x => x.Address.ZipCode, new { @class = "reserve-input min",onkeypress = "return isNumberKey(event)", maxlength = 5, required = "required" })
        <br />
        @Html.Label("Choose secondary addres: ", new { @class = "reserve-label" })
        @Html.CheckBox("second-address", false)
        <br />
        <div id="second-address-form" style="display:none">
            @Html.LabelFor(x => x.SecondAddress.StreetAdress, new { @class = "reserve-label" })
            @Html.TextBoxFor(x => x.SecondAddress.StreetAdress, new { @class = "reserve-input", style = "width:79%", required = "required" })
            <br />
            @Html.LabelFor(x => x.SecondAddress.City, new { @class = "reserve-label" })
            @Html.TextBoxFor(x => x.SecondAddress.City, new { @class = "reserve-input min", required = "required" })
            @Html.LabelFor(x => x.SecondAddress.State, new { @class = "reserve-label" })
            @Html.TextBoxFor(x => x.SecondAddress.State, new { @class = "reserve-input min", required = "required" })
            @Html.LabelFor(x => x.SecondAddress.ZipCode, new { @class = "reserve-label" })
            @Html.TextBoxFor(x => x.SecondAddress.ZipCode, new { @class = "reserve-input min", onkeypress = "return isNumberKey(event)", maxlength = 5, required = "required" })
        </div>
        <br />
        <div class="row" style="width:100%">
            <div class="col-sm-4">
                @Html.LabelFor(x => x.DateOfBirth, new { @class = "reserve-label" })
                @Html.TextBoxFor(x => x.DateOfBirth, new { @class = "reserve-input", id = "popupDatepicker", required = "required" })
                <br />
                @Html.LabelFor(x => x.SSN, new { @class = "reserve-label" })
                @Html.TextBoxFor(x => x.SSN, new { @class = "reserve-input max", onkeypress = "return isNumberKey(event)", maxlength = 11, required = "required" })

            </div>
            <div class="col-sm-4">
                @Html.LabelFor(x => x.EmailAddress, new { @class = "reserve-label" })
                @Html.TextBoxFor(x => x.EmailAddress, new { @class = "reserve-input max", type = "email", required = "required" })
                <br />
                @Html.LabelFor(x => x.DesiredSalary, new { @class = "reserve-label" })
                @Html.TextBox("fake-input", "", new { @class = "reserve-input", type = "number", style = "min-width:20px; width:75px; margin-right:0" })
                @Html.TextBoxFor(x => x.DesiredSalary, new { style = "min-width:0px; width:0px; display:none" })
                @Html.DropDownList("perRate", new SelectList(listItems, "Value", "Text"), new { @class = "reserve-input", style = "min-width:50px;max-width:95px" })
            </div>
            <div class="col-sm-4">
                @Html.LabelFor(x => x.PhoneNumber, new { @class = "reserve-label" })
                @Html.TextBoxFor(x => x.PhoneNumber, new { @class = "reserve-input max", onkeypress = "return isNumberKey(event)", maxlength = 14, required = "required" })
                <br />
                @Html.LabelFor(x => x.ApplyForPosition, new { @class = "reserve-label" })
                @Html.TextBoxFor(x => x.ApplyForPosition, new { @class = "reserve-input max", required = "required" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-1 col-md-10">
                <input type="submit" class="btn btn-info" value="Continue to Step 2" />
            </div>
        </div>
    </fieldset>
}

@section Scripts{
    <script type="text/javascript" src="~/Scripts/jquery.plugin.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.datepick.js"></script>
    <script type="text/javascript" src="~/Scripts/resume-validation.js"></script>
}
